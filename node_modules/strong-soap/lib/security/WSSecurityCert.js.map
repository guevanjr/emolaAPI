{"version":3,"sources":["../../src/security/WSSecurityCert.js"],"names":["NodeRsa","require","SignedXml","uuid","Security","xmlHandler","crypto","addMinutes","date","minutes","Date","getTime","dateStringForSOAP","getUTCFullYear","getUTCMonth","slice","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","generateCreated","generateExpires","generateId","v4","replace","WSSecurityCert","constructor","privatePEM","publicP12PEM","password","toString","signer","signingKey","getSigningKey","x509Id","references","addReference","_this","keyInfoProvider","getKeyInfo","key","xml","createPrivateKey","privateKey","passphrase","export","type","format","Error","exportKey","postProcess","headerElement","bodyElement","created","expires","binaryToken","id","secElement","element","attribute","text","tsElement","xmlWithSec","doc","end","pretty","computeSignature","sig","getSignatureXml","parseXml","module","exports"],"mappings":"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","sourcesContent":["// Copyright IBM Corp. 2016,2018. All Rights Reserved.\n// Node module: strong-soap\n// This file is licensed under the MIT License.\n// License text available at https://opensource.org/licenses/MIT\n\n'use strict';\n\nvar NodeRsa = require('node-rsa');\nvar SignedXml = require('xml-crypto').SignedXml;\nvar uuid = require('uuid');\nvar Security = require('./security');\nvar xmlHandler = require('../parser/xmlHandler');\n\nvar crypto = require('crypto');\n\nfunction addMinutes(date, minutes) {\n  return new Date(date.getTime() + minutes * 60000);\n}\n\nfunction dateStringForSOAP(date) {\n  return date.getUTCFullYear() + '-' +\n    ('0' + (date.getUTCMonth() + 1)).slice(-2) + '-' +\n    ('0' + date.getUTCDate()).slice(-2) + 'T' +\n    ('0' + date.getUTCHours()).slice(-2) + \":\" +\n    ('0' + date.getUTCMinutes()).slice(-2) + \":\" +\n    ('0' + date.getUTCSeconds()).slice(-2) + \"Z\";\n}\n\nfunction generateCreated() {\n  return dateStringForSOAP(new Date());\n}\n\nfunction generateExpires() {\n  return dateStringForSOAP(addMinutes(new Date(), 10));\n}\n\nfunction generateId() {\n  return uuid.v4().replace(/-/gm, '');\n}\n\nclass WSSecurityCert extends Security {\n  constructor(privatePEM, publicP12PEM, password) {\n    super();\n    \n    this.publicP12PEM = publicP12PEM.toString()\n      .replace('-----BEGIN CERTIFICATE-----', '')\n      .replace('-----END CERTIFICATE-----', '')\n      .replace(/(\\r\\n|\\n|\\r)/gm, '');\n\n    this.signer = new SignedXml();\n    this.signer.signingKey = this.getSigningKey(privatePEM, password);\n    this.x509Id = 'x509-' + generateId();\n\n    var references = ['http://www.w3.org/2000/09/xmldsig#enveloped-signature',\n      'http://www.w3.org/2001/10/xml-exc-c14n#'];\n\n    this.signer.addReference('//*[local-name(.)=\\'Body\\']', references);\n    this.signer.addReference('//*[local-name(.)=\\'Timestamp\\']', references);\n\n    var _this = this;\n    this.signer.keyInfoProvider = {};\n    this.signer.keyInfoProvider.getKeyInfo = function(key) {\n      var x509Id = _this.x509Id;\n      var xml =\n        `<wsse:SecurityTokenReference>\n    <wsse:Reference URI=\"${x509Id}\" ValueType=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-x509-token-profile-1.0#X509v3\"/>\n    </wsse:SecurityTokenReference>`;\n      return xml;\n    };\n  }\n\n  getSigningKey(privatePEM, password) {\n    if (typeof crypto.createPrivateKey === 'function') {\n      // Node 11 or above\n      this.privateKey = crypto.createPrivateKey({key: privatePEM, passphrase: password});\n      return this.privateKey.export({type: 'pkcs1', format: 'pem'});\n    } else {\n      // Node 10 or below, fall back to https://github.com/rzcoder/node-rsa\n      if (password) throw new Error('Passphrase is not supported by node-rsa.');\n      this.privateKey = new NodeRsa(privatePEM);\n      return this.privateKey.exportKey('private');\n    }\n  }\n\n  postProcess(headerElement, bodyElement) {\n    this.created = generateCreated();\n    this.expires = generateExpires();\n\n    var binaryToken = this.publicP12PEM,\n      created = this.created,\n      expires = this.expires,\n      id = this.x509Id;\n\n    var secElement = headerElement.element('wsse:Security')\n      .attribute('xmlns:wsse', 'http://docs.oasis-open.org/wss/2004/01/' +\n        'oasis-200401-wss-wssecurity-secext-1.0.xsd')\n      .attribute('xmlns:wsu', 'http://docs.oasis-open.org/wss/2004/01/' +\n        'oasis-200401-wss-wssecurity-utility-1.0.xsd')\n      .attribute('soap:mustUnderstand', '1');\n    secElement.element('wsse:BinarySecurityToken')\n      .attribute('EncodingType', 'http://docs.oasis-open.org/wss/2004/01/' +\n        'oasis-200401-wss-soap-message-security-1.0#Base64Binary')\n      .attribute('ValueType', 'http://docs.oasis-open.org/wss/2004/01/' +\n        'oasis-200401-wss-x509-token-profile-1.0#X509v3')\n      .attribute('wsu:Id', id)\n      .text(binaryToken);\n    var tsElement = secElement.element('wsu:Timestamp')\n      .attribute('wsu:Id', '_1');\n    tsElement.element('wsu:Created', created);\n    tsElement.element('wsu:Expires', expires);\n\n    var xmlWithSec = headerElement.doc().end({pretty: true});\n\n    this.signer.computeSignature(xmlWithSec);\n    var sig = this.signer.getSignatureXml();\n\n    xmlHandler.parseXml(secElement, sig);\n  }\n}\n\nmodule.exports = WSSecurityCert;\n"],"file":"WSSecurityCert.js"}