{"version":3,"sources":["../../src/security/WSSecurity.js"],"names":["Security","require","crypto","passwordDigest","validPasswordTypes","toXMLDate","WSSecurity","constructor","username","password","options","_username","_password","_passwordType","passwordType","indexOf","_hasTimeStamp","hasTimeStamp","_hasTokenCreated","hasTokenCreated","hasNonce","_hasNonce","actor","_actor","mustUnderstand","_mustUnderstand","addSoapHeaders","headerElement","secElement","element","attribute","now","Date","created","timeStampXml","expires","getTime","tsElement","userNameElement","nonce","nHash","createHash","update","Math","random","digest","text","module","exports"],"mappings":"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","sourcesContent":["// Copyright IBM Corp. 2016. All Rights Reserved.\n// Node module: strong-soap\n// This file is licensed under the MIT License.\n// License text available at https://opensource.org/licenses/MIT\n\n\"use strict\";\n\nvar Security = require('./security');\nvar crypto = require('crypto');\nvar passwordDigest = require('../utils').passwordDigest;\nvar validPasswordTypes = ['PasswordDigest', 'PasswordText'];\nvar toXMLDate = require('../utils').toXMLDate;\n\nclass WSSecurity extends Security {\n  constructor(username, password, options) {\n    options = options || {};\n    super(options);\n    this._username = username;\n    this._password = password;\n    //must account for backward compatibility for passwordType String param as \n    // well as object options defaults: passwordType = 'PasswordText', \n    // hasTimeStamp = true   \n    if (typeof options === 'string') {\n      this._passwordType = options ? options : 'PasswordText';\n      options = {};\n    } else {\n      this._passwordType = options.passwordType ? options.passwordType :\n        'PasswordText';\n    }\n\n    if (validPasswordTypes.indexOf(this._passwordType) === -1) {\n      this._passwordType = 'PasswordText';\n    }\n\n    this._hasTimeStamp = options.hasTimeStamp ||\n    typeof options.hasTimeStamp === 'boolean' ? !!options.hasTimeStamp : true;\n    this._hasTokenCreated = options.hasTokenCreated ||\n    typeof options.hasTokenCreated === 'boolean' ?\n      !!options.hasTokenCreated : true;\n\n    /*jshint eqnull:true */\n    if (options.hasNonce != null) {\n      this._hasNonce = !!options.hasNonce;\n    }\n    this._hasTokenCreated = options.hasTokenCreated ||\n    typeof options.hasTokenCreated === 'boolean' ?\n      !!options.hasTokenCreated : true;\n    if (options.actor != null) {\n      this._actor = options.actor;\n    }\n    if (options.mustUnderstand != null) {\n      this._mustUnderstand = !!options.mustUnderstand;\n    }\n  }\n\n  addSoapHeaders(headerElement) {\n    var secElement = headerElement.element('wsse:Security');\n    if (this._actor) {\n      secElement.attribute('soap:actor', this._actor);\n    }\n    if (this._mustUnderstand) {\n      secElement.attribute('soap:mustUnderstand', '1');\n    }\n\n    secElement\n      .attribute('xmlns:wsse', 'http://docs.oasis-open.org/wss/2004/01/' +\n        'oasis-200401-wss-wssecurity-secext-1.0.xsd')\n      .attribute('xmlns:wsu', 'http://docs.oasis-open.org/wss/2004/01/' +\n        'oasis-200401-wss-wssecurity-utility-1.0.xsd');\n\n    var now = new Date();\n    var created = toXMLDate(now);\n    var timeStampXml = '';\n    if (this._hasTimeStamp) {\n      var expires = toXMLDate(new Date(now.getTime() + (1000 * 600)));\n\n      var tsElement = secElement.element('wsu:Timestamp')\n        .attribute('wsu:Id', 'Timestamp-' + created);\n      tsElement.element('wsu:Created', created);\n      tsElement.element('wsu:Expires', expires);\n    }\n\n    var userNameElement = secElement.element('wsse:UsernameToken')\n      .attribute('wsu:Id', 'SecurityToken-' + created);\n\n    userNameElement.element('wsse:Username', this._username);\n    if (this._hasTokenCreated) {\n      userNameElement.element('wsu:Created', created);\n    }\n\n    var nonce;\n    if(this._hasNonce || this._passwordType !== 'PasswordText') {\n      // nonce = base64 ( sha1 ( created + random ) )\n      var nHash = crypto.createHash('sha1');\n      nHash.update(created + Math.random());\n      nonce = nHash.digest('base64');\n    }\n\n    var password;\n    if (this._passwordType === 'PasswordText') {\n      userNameElement.element('wsse:Password')\n        .attribute('Type', 'http://docs.oasis-open.org/wss/2004/01/' +\n        'oasis-200401-wss-username-token-profile-1.0#PasswordText')\n        .text(this._password);\n\n      if (nonce) {\n        userNameElement.element('wsse:Nonce')\n          .attribute('EncodingType', 'http://docs.oasis-open.org/wss/2004/01/' +\n            'oasis-200401-wss-soap-message-security-1.0#Base64Binary')\n          .text(nonce);\n      }\n    } else {\n      userNameElement.element('wsse:Password')\n        .attribute('Type', 'http://docs.oasis-open.org/wss/2004/01/' +\n          'oasis-200401-wss-username-token-profile-1.0#PasswordDigest')\n        .text(passwordDigest(nonce, created, this._password));\n\n      userNameElement.element('wsse:Nonce')\n        .attribute('EncodingType', 'http://docs.oasis-open.org/wss/2004/01/' +\n          'oasis-200401-wss-soap-message-security-1.0#Base64Binary')\n        .text(nonce);\n    }\n\n  }\n}\n\nmodule.exports = WSSecurity;\n"],"file":"WSSecurity.js"}