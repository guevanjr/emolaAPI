{"version":3,"sources":["../src/soapModel.js"],"names":["assert","require","QName","SOAPElement","constructor","value","qname","options","xml","SOAPAttribute","String","addTo","parent","nsContext","xmlHandler","nsURI","getNamespaceURI","prefix","name","attribute","declareNamespace","exports"],"mappings":"AAAA;AACA;AACA;AACA;AAEA;;AAEA,IAAIA,MAAM,GAAGC,OAAO,CAAC,QAAD,CAApB;;AACA,IAAIC,KAAK,GAAGD,OAAO,CAAC,gBAAD,CAAnB;AAEA;AACA;AACA;;;AACA,MAAME,WAAN,CAAkB;AAChBC,EAAAA,WAAW,CAACC,KAAD,EAAQC,KAAR,EAAeC,OAAf,EAAwB;AACjC,QAAI,OAAOF,KAAP,KAAiB,QAAjB,IAA6B,CAACC,KAAlC,EAAyC;AACvC,WAAKE,GAAL,GAAWH,KAAX;AACD,KAFD,MAEO;AACL,WAAKA,KAAL,GAAaA,KAAb;AACA,WAAKC,KAAL,GAAaA,KAAb;AACA,WAAKC,OAAL,GAAeA,OAAO,IAAI,EAA1B;AACD;AACF;;AATe;AAalB;AACA;AACA;;;AACA,MAAME,aAAN,CAAoB;AAClBL,EAAAA,WAAW,CAACC,KAAD,EAAQC,KAAR,EAAe;AACxBN,IAAAA,MAAM,CAACM,KAAD,EAAQ,mBAAR,CAAN;AACA,SAAKD,KAAL,GAAaK,MAAM,CAACL,KAAD,CAAnB;AACA,SAAKC,KAAL,GAAaA,KAAb;AACD;;AAEDK,EAAAA,KAAK,CAACC,MAAD,EAASC,SAAT,EAAoBC,UAApB,EAAgC;AACnC,QAAIC,KAAK,GAAGF,SAAS,CAACG,eAAV,CAA0B,KAAKV,KAAL,CAAWW,MAArC,CAAZ;;AACA,QAAGF,KAAK,KAAK,KAAKT,KAAL,CAAWS,KAAxB,EAA+B;AAC7B,UAAIG,IAAI,GAAG,KAAKZ,KAAL,CAAWW,MAAX,GAAoB,GAApB,GAA0B,KAAKX,KAAL,CAAWY,IAAhD;AACAN,MAAAA,MAAM,CAACO,SAAP,CAAiBD,IAAjB,EAAuB,KAAKb,KAA5B;AACD,KAHD,MAGO;AACLQ,MAAAA,SAAS,CAACO,gBAAV,CAA2B,KAAKd,KAAL,CAAWW,MAAtC,EAA8C,KAAKX,KAAL,CAAWS,KAAzD;AACD;AACF;;AAfiB;;AAkBpBM,OAAO,CAAClB,WAAR,GAAsBA,WAAtB;AACAkB,OAAO,CAACZ,aAAR,GAAwBA,aAAxB","sourcesContent":["// Copyright IBM Corp. 2016,2017. All Rights Reserved.\n// Node module: strong-soap\n// This file is licensed under the MIT License.\n// License text available at https://opensource.org/licenses/MIT\n\n'use strict';\n\nvar assert = require('assert');\nvar QName = require('./parser/qname');\n\n/**\n * Representation for soap elements\n */\nclass SOAPElement {\n  constructor(value, qname, options) {\n    if (typeof value === 'string' && !qname) {\n      this.xml = value;\n    } else {\n      this.value = value;\n      this.qname = qname;\n      this.options = options || {};\n    }\n  }\n\n}\n\n/**\n * Representation for soap attributes\n */\nclass SOAPAttribute {\n  constructor(value, qname) {\n    assert(qname, 'qname is required');\n    this.value = String(value);\n    this.qname = qname;\n  }\n\n  addTo(parent, nsContext, xmlHandler) {\n    var nsURI = nsContext.getNamespaceURI(this.qname.prefix);\n    if(nsURI === this.qname.nsURI) {\n      var name = this.qname.prefix + ':' + this.qname.name;\n      parent.attribute(name, this.value);\n    } else {\n      nsContext.declareNamespace(this.qname.prefix, this.qname.nsURI);\n    }\n  }\n}\n\nexports.SOAPElement = SOAPElement;\nexports.SOAPAttribute = SOAPAttribute;\n"],"file":"soapModel.js"}