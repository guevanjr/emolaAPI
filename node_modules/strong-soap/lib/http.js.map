{"version":3,"sources":["../src/http.js"],"names":["url","require","requestModule","debug","debugSensitive","httpntlm","uuid","v4","VERSION","version","HttpClient","constructor","options","_request","request","buildRequest","rurl","data","exheaders","exoptions","curl","parse","secure","protocol","host","hostname","port","parseInt","path","pathname","search","hash","join","method","headers","isNaN","attr","header","attachments","mergeOptions","length","Buffer","byteLength","uri","followAllRedirects","start","multipart","forEach","attachment","push","mimetype","contentId","name","body","indexOf","handleResponse","req","res","match","isNtlmAuthRequired","ntlmSecurity","methodName","wsdlAuthRequired","callback","self","NTLMSecurity","ntlmAuth","err","username","password","domain","workstation","ntlm","strict","toLocaleLowerCase","module","exports"],"mappings":"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","sourcesContent":["// Copyright IBM Corp. 2016. All Rights Reserved.\n// Node module: strong-soap\n// This file is licensed under the MIT License.\n// License text available at https://opensource.org/licenses/MIT\n\n'use strict';\n\nvar url = require('url');\nvar requestModule = require('request');\nvar debug = require('debug')('strong-soap:http');\nvar debugSensitive = require('debug')('strong-soap:http:sensitive');\nvar httpntlm = require('httpntlm-maa');\nvar uuid = require('uuid').v4;\n\n\nvar VERSION = require('../package.json').version;\n\n/**\n * A class representing the http client\n * @param {Object} [options] Options object. It allows the customization of\n * `request` module\n *\n * @constructor\n */\nclass HttpClient {\n  constructor(options) {\n    this.options = options || {};\n    this._request = options.request || requestModule;\n  }\n\n  /**\n   * Build the HTTP request (method, uri, headers, ...)\n   * @param {String} rurl The resource url\n   * @param {Object|String} data The payload\n   * @param {Object} exheaders Extra http headers\n   * @param {Object} exoptions Extra options\n   * @returns {Object} The http request object for the `request` module\n   */\n  buildRequest(rurl, data, exheaders, exoptions) {\n    var curl = url.parse(rurl);\n    var secure = curl.protocol === 'https:';\n    var host = curl.hostname;\n    var port = parseInt(curl.port, 10);\n    var path = [curl.pathname || '/', curl.search || '', curl.hash || ''].join('');\n    var method = data ? 'POST' : 'GET';\n    var headers = {\n      'User-Agent': 'strong-soap/' + VERSION,\n      'Accept': 'text/html,application/xhtml+xml,application/xml,text/xml;q=0.9,*/*;q=0.8',\n      'Accept-Encoding': 'none',\n      'Accept-Charset': 'utf-8',\n      'Connection': 'close',\n      'Host': host + (isNaN(port) ? '' : ':' + port)\n    };\n    var attr;\n    var header;\n    var attachments = []\n    var mergeOptions = ['headers'];\n    if (exoptions) {\n      attachments = exoptions.attachments || [];\n    }\n\n    if (typeof data === 'string' && attachments.length === 0) {\n      headers['Content-Length'] = Buffer.byteLength(data, 'utf8');\n      headers['Content-Type'] = 'application/x-www-form-urlencoded';\n    }\n\n    exheaders = exheaders || {};\n    for (attr in exheaders) {\n      headers[attr] = exheaders[attr];\n    }\n\n    var options = {\n      uri: curl,\n      method: method,\n      headers: headers,\n      followAllRedirects: true\n    };\n\n    if (attachments.length > 0) {\n      const start = uuid();\n      headers['Content-Type'] =\n        'multipart/related; type=\"application/xop+xml\"; start=\"<' + start + '>\"; start-info=\"text/xml\"; boundary=' + uuid();\n      const multipart = [{\n        'Content-Type': 'application/xop+xml; charset=UTF-8; type=\"text/xml\"',\n        'Content-ID': '<' + start + '>',\n        'body': data,\n      }];\n\n      attachments.forEach((attachment) => {\n        multipart.push({\n          'Content-Type': attachment.mimetype,\n          'Content-Transfer-Encoding': 'binary',\n          'Content-ID': '<' + attachment.contentId + '>',\n          'Content-Disposition': 'attachment; filename=\"' + attachment.name + '\"',\n          'body': attachment.body,\n        });\n      });\n      options.multipart = multipart;\n    } else {\n      options.body = data;\n    }\n\n\n    exoptions = exoptions || {};\n    for (attr in exoptions) {\n      if (mergeOptions.indexOf(attr) !== -1) {\n        for (header in exoptions[attr]) {\n          options[attr][header] = exoptions[attr][header];\n        }\n      } else {\n        options[attr] = exoptions[attr];\n      }\n    }\n    debug('Http request: %j', options);\n    return options;\n  }\n\n  /**\n   * Handle the http response\n   * @param {Object} The req object\n   * @param {Object} res The res object\n   * @param {Object} body The http body\n   * @param {Object} The parsed body\n   */\n  handleResponse(req, res, body) {\n    debug('Http response body: %j', body);\n    if (typeof body === 'string') {\n      // Remove any extra characters that appear before or after the SOAP\n      // envelope.\n      var match = body.match(\n        /(?:<\\?[^?]*\\?>[\\s]*)?<([^:]*):Envelope([\\S\\s]*)<\\/\\1:Envelope>/i);\n      if (match) {\n        body = match[0];\n      }\n    }\n    return body;\n  }\n\n  //check if NTLM authentication needed\n  isNtlmAuthRequired(ntlmSecurity, methodName) {\n    //if ntlmSecurity is not set, then remote web service is not NTLM authenticated Web Service\n    if (ntlmSecurity == null) {\n      return false;\n    } else if (methodName === 'GET' && (ntlmSecurity.wsdlAuthRequired == null || ntlmSecurity.wsdlAuthRequired === false)) {\n      //In some WebServices, getting remote WSDL is not NTLM authenticated. Only WebService invocation is NTLM authenticated.\n      return false;\n    }\n    //need NTLM authentication for both 'GET' (remote wsdl retrieval) and 'POST' (Web Service invocation)\n    return true;\n  }\n\n  request(rurl, data, callback, exheaders, exoptions) {\n    var self = this;\n    var options = self.buildRequest(rurl, data, exheaders, exoptions);\n    var headers = options.headers;\n    var req;\n\n    //typically clint.js would do addOptions() if security is set in order to get all security options added to options{}. But client.js\n    //addOptions() code runs after this code is trying to contact server to load remote WSDL, hence we have NTLM authentication\n    //object passed in as option to createClient() call for now. Revisit.\n    var ntlmSecurity = this.options.NTLMSecurity;\n    var ntlmAuth = self.isNtlmAuthRequired(ntlmSecurity, options.method);\n    if (!ntlmAuth) {\n      req = self._request(options, function (err, res, body) {\n        if (err) {\n          return callback(err);\n        }\n        body = self.handleResponse(req, res, body);\n        callback(null, res, body);\n      });\n    } else {\n        //httpntlm code needs 'url' in options{}. It should be plain string, not parsed uri\n        options.url = rurl;\n        options.username = ntlmSecurity.username;\n        options.password = ntlmSecurity.password;\n        options.domain = ntlmSecurity.domain;\n        options.workstation = ntlmSecurity.workstation;\n        options.request = requestModule;\n        options.ntlm = { strict: true };\n        //httpntlm code uses lower case for method names - 'get', 'post' etc\n        var method = options.method.toLocaleLowerCase();\n        debugSensitive('NTLM options: %j for method: %s', options, method);\n        debug('httpntlm method: %s', method);\n        req = httpntlm['method'](method, options, function (err, res) {\n          if (err) {\n            return callback(err);\n          }\n          var body = self.handleResponse(req, res, res.body);\n          callback(null, res, body);\n        });\n      }\n\n    return req;\n  }\n}\n\nmodule.exports = HttpClient;\n"],"file":"http.js"}