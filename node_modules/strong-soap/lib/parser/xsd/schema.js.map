{"version":3,"sources":["../../../src/parser/xsd/schema.js"],"names":["_","require","assert","XSDElement","helper","Set","Schema","constructor","nsName","attrs","options","complexTypes","simpleTypes","elements","includes","groups","attributes","attributeGroups","merge","source","isInclude","$targetNamespace","undefined","xmlns","Array","isArray","uniq","concat","addChild","child","name","$name","getTargetNamespace","namespaces","xsd","schemaTypes","location","$schemaLocation","$location","push","namespace","$namespace","type","postProcess","defintions","visited","add","children","forEach","c","visitDfs","nodes","node","has","_processed","elementName","allowedChildren","module","exports"],"mappings":"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","sourcesContent":["// Copyright IBM Corp. 2016,2018. All Rights Reserved.\n// Node module: strong-soap\n// This file is licensed under the MIT License.\n// License text available at https://opensource.org/licenses/MIT\n\n'use strict';\n\nvar _ = require('lodash');\nvar assert = require('assert');\nvar XSDElement = require('./xsdElement');\nvar helper = require('./../helper');\nvar Set = helper.Set;\n\nclass Schema extends XSDElement {\n  constructor(nsName, attrs, options) {\n    super(nsName, attrs, options);\n    this.complexTypes = {}; // complex types\n    this.simpleTypes = {}; // simple types\n    this.elements = {}; // elements\n    this.includes = []; // included or imported schemas\n    this.groups = {};\n    this.attributes = {};\n    this.attributeGroups = {};\n  }\n\n  merge(source, isInclude) {\n    if (source === this) return this;\n    assert(source instanceof Schema);\n    if (this.$targetNamespace === source.$targetNamespace ||\n      // xsd:include allows the target schema that does not have targetNamespace\n      (isInclude && source.$targetNamespace === undefined)) {\n      _.merge(this.complexTypes, source.complexTypes);\n      _.merge(this.simpleTypes, source.simpleTypes);\n      _.merge(this.elements, source.elements);\n      _.merge(this.groups, source.groups);\n      _.merge(this.attributes, source.attributes);\n      _.merge(this.attributeGroups, source.attributeGroups);\n      _.merge(this.xmlns, source.xmlns);\n      if (Array.isArray(source.includes)) {\n        this.includes = _.uniq(this.includes.concat(source.includes));\n      }\n    }\n    return this;\n  }\n\n  addChild(child) {\n    var name = child.$name;\n    if (child.getTargetNamespace() === helper.namespaces.xsd &&\n      name in helper.schemaTypes)\n      return;\n    switch (child.name) {\n      case 'include':\n      case 'import':\n        var location = child.$schemaLocation || child.$location;\n        if (location) {\n          this.includes.push({\n            namespace: child.$namespace || child.$targetNamespace\n            || this.$targetNamespace,\n            location: location,\n            type: child.name // include or import\n          });\n        }\n        break;\n      case 'complexType':\n        this.complexTypes[name] = child;\n        break;\n      case 'simpleType':\n        this.simpleTypes[name] = child;\n        break;\n      case 'element':\n        this.elements[name] = child;\n        break;\n      case 'group':\n        this.groups[name] = child;\n        break;\n      case 'attribute':\n        this.attributes[name] = child;\n        break;\n      case 'attributeGroup':\n        this.attributeGroups[name] = child;\n        break;\n    }\n  }\n\n  postProcess(defintions) {\n    var visited = new Set();\n    visited.add(this);\n    this.children.forEach(function(c) {\n      visitDfs(defintions, visited, c);\n    });\n  }\n}\n\nfunction visitDfs(defintions, nodes, node) {\n  let visited = nodes.has(node);\n  if (!visited && !node._processed) {\n    node.postProcess(defintions);\n    node._processed = true;\n\n    node.children.forEach(function(child) {\n      visitDfs(defintions, nodes, child);\n    });\n  }\n}\n\nSchema.elementName = 'schema';\nSchema.allowedChildren = ['annotation', 'element', 'complexType', 'simpleType',\n  'include', 'import', 'group', 'attribute', 'attributeGroup'];\n\nmodule.exports = Schema;\n"],"file":"schema.js"}