{"version":3,"sources":["../../../src/parser/xsd/complexType.js"],"names":["XSDElement","require","Choice","Sequence","All","SimpleContent","ComplexContent","ComplexType","constructor","nsName","attrs","options","describe","definitions","descriptor","TypeDescriptor","$mixed","mixed","children","childDescriptor","i","child","add","name","$name","xmlns","targetNamespace","isSimple","describeChildren","extension","schemas","schema","complexTypes","type","inheritance","elementName","allowedChildren","module","exports"],"mappings":"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","sourcesContent":["// Copyright IBM Corp. 2016,2017. All Rights Reserved.\n// Node module: strong-soap\n// This file is licensed under the MIT License.\n// License text available at https://opensource.org/licenses/MIT\n\n'use strict';\n\nvar XSDElement = require('./xsdElement');\nvar Choice = require('./choice');\nvar Sequence = require('./sequence');\nvar All = require('./all');\nvar SimpleContent = require('./simpleContent');\nvar ComplexContent = require('./complexContent');\n\nclass ComplexType extends XSDElement {\n  constructor(nsName, attrs, options) {\n    super(nsName, attrs, options);\n  }\n\n  describe(definitions) {\n    if (this.descriptor) return this.descriptor;\n    var descriptor = this.descriptor =\n      new XSDElement.TypeDescriptor();\n    if (this.$mixed) {\n      descriptor.mixed = true;\n    }\n    var children = this.children || [];\n    var childDescriptor;\n    for (var i = 0, child; child = children[i]; i++) {\n      childDescriptor = child.describe(definitions);\n      if (childDescriptor) {\n        descriptor.add(childDescriptor);\n      }\n    }\n    descriptor.name = this.$name || this.name;\n    descriptor.xmlns = this.targetNamespace;\n    descriptor.isSimple = false;\n    return descriptor;\n  }\n\n  describeChildren(definitions) {\n    if (this.descriptor) {\n      if (this.descriptor.extension) {\n        let extension = this.descriptor.extension;\n        let xmlns = extension.xmlns;\n        let name = extension.name;\n        if (xmlns) {\n          let schemas = definitions.schemas;\n          if (schemas) {\n            let schema = schemas[xmlns];\n            if (schema) {\n              let complexTypes = schema.complexTypes;\n              if (complexTypes) {\n                let type = complexTypes[name];\n                if (type) {\n                  if (type.descriptor) {\n                    if(!type.descriptor.inheritance){\n                      type.descriptor.inheritance = {};\n                    }\n                    type.descriptor.inheritance[this.descriptor.name] = this.descriptor;\n                  }\n                }\n              }\n            }\n          }\n        }\n      }  \n    }\n  }\n}\n\nComplexType.elementName = 'complexType';\nComplexType.allowedChildren = ['annotation', 'group', 'sequence', 'all',\n  'complexContent', 'simpleContent', 'choice', 'attribute', 'attributeGroup',\n  'anyAttribute'];\n\nmodule.exports = ComplexType;\n"],"file":"complexType.js"}