{"version":3,"sources":["../../../src/parser/xsd/list.js"],"names":["g","require","XSDElement","helper","QName","SimpleType","List","constructor","nsName","attrs","options","postProcess","definitions","itemType","undefined","self","$itemType","qname","parse","resolveSchemaObject","schemas","children","forEach","c","warn","elementName","allowedChildren","module","exports"],"mappings":"AAAA;AACA;AACA;AACA;AAEA;;AAEA,IAAIA,CAAC,GAAGC,OAAO,CAAC,iBAAD,CAAf;;AACA,IAAIC,UAAU,GAAGD,OAAO,CAAC,cAAD,CAAxB;;AACA,IAAIE,MAAM,GAAGF,OAAO,CAAC,WAAD,CAApB;;AACA,IAAIG,KAAK,GAAGH,OAAO,CAAC,UAAD,CAAnB;;AACA,IAAII,UAAU,GAAGJ,OAAO,CAAC,cAAD,CAAxB;;AAEA,MAAMK,IAAN,SAAmBJ,UAAnB,CAA8B;AAC5BK,EAAAA,WAAW,CAACC,MAAD,EAASC,KAAT,EAAgBC,OAAhB,EAAyB;AAClC,UAAMF,MAAN,EAAcC,KAAd,EAAqBC,OAArB;AACD;;AAEDC,EAAAA,WAAW,CAACC,WAAD,EAAc;AACvB,QAAI,KAAKC,QAAL,KAAkBC,SAAtB,EAAiC;AAC/B;AACD;;AACD,QAAIC,IAAI,GAAG,IAAX;;AACA,QAAI,KAAKC,SAAT,EAAoB;AAClB,UAAIC,KAAK,GAAGb,KAAK,CAACc,KAAN,CAAY,KAAKF,SAAjB,CAAZ;AACA,WAAKH,QAAL,GAAgB,KAAKM,mBAAL,CAAyBP,WAAW,CAACQ,OAArC,EACd,YADc,EACA,KAAKJ,SADL,CAAhB;AAED;;AACD,SAAKK,QAAL,CAAcC,OAAd,CAAsB,UAASC,CAAT,EAAY;AAChC,UAAIA,CAAC,YAAYlB,UAAjB,EAA6B;AAC3B,YAAIU,IAAI,CAACC,SAAT,EAAoB;AAClBhB,UAAAA,CAAC,CAACwB,IAAF,CAAO,0DACL,mCADF;AAED,SAHD,MAGO,IAAIT,IAAI,CAACF,QAAT,EAAmB;AACxBb,UAAAA,CAAC,CAACwB,IAAF,CAAO,kDAAP;AACD;;AACDT,QAAAA,IAAI,CAACF,QAAL,GAAgBU,CAAhB;AACD;AACF,KAVD;;AAWA,QAAI,CAAC,KAAKV,QAAV,EAAoB;AAClBb,MAAAA,CAAC,CAACwB,IAAF,CAAO,6BAAP;AACD;AACF;;AA7B2B;;AAgC9BlB,IAAI,CAACmB,WAAL,GAAmB,MAAnB;AACAnB,IAAI,CAACoB,eAAL,GAAuB,CAAC,YAAD,EAAe,YAAf,CAAvB;AAEAC,MAAM,CAACC,OAAP,GAAiBtB,IAAjB","sourcesContent":["// Copyright IBM Corp. 2016,2017. All Rights Reserved.\n// Node module: strong-soap\n// This file is licensed under the MIT License.\n// License text available at https://opensource.org/licenses/MIT\n\n'use strict';\n\nvar g = require('../../globalize');\nvar XSDElement = require('./xsdElement');\nvar helper = require('../helper');\nvar QName = require('../qname');\nvar SimpleType = require('./simpleType');\n\nclass List extends XSDElement {\n  constructor(nsName, attrs, options) {\n    super(nsName, attrs, options);\n  }\n\n  postProcess(definitions) {\n    if (this.itemType !== undefined) {\n      return;\n    }\n    var self = this;\n    if (this.$itemType) {\n      var qname = QName.parse(this.$itemType);\n      this.itemType = this.resolveSchemaObject(definitions.schemas,\n        'simpleType', this.$itemType);\n    }\n    this.children.forEach(function(c) {\n      if (c instanceof SimpleType) {\n        if (self.$itemType) {\n          g.warn('Attribute {{itemType}} is not allowed if the content ' +\n            'contains a {{simpleType}} element');\n        } else if (self.itemType) {\n          g.warn('List can only contain one {{simpleType}} element');\n        }\n        self.itemType = c;\n      }\n    });\n    if (!this.itemType) {\n      g.warn('List must have an item type');\n    }\n  }\n}\n\nList.elementName = 'list';\nList.allowedChildren = ['annotation', 'simpleType'];\n\nmodule.exports = List;\n"],"file":"list.js"}