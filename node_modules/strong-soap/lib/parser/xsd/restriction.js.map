{"version":3,"sources":["../../../src/parser/xsd/restriction.js"],"names":["XSDElement","require","Sequence","Choice","QName","g","Restriction","constructor","nsName","attrs","options","addChild","child","name","$value","push","parent","elementName","describe","definitions","descriptor","TypeDescriptor","base","add","describeChildren","postProcess","defintions","schemas","$base","resolveSchemaObject","_getFractionDigitCount","val","lastDotPos","lastIndexOf","length","_getTotalDigitCount","stripped","replace","trim","enforce","violations","jsType","Boolean","Date","Number","isNaN","minExclusive","undefined","minInclusive","maxExclusive","maxInclusive","fractionDigits","fractionDigitCount","toFixed","totalDigits","integerDigits","parseInt","toString","maxLength","minLength","whiteSpace","pattern","RegExp","test","enumeration","indexOf","Error","f","$name","JSON","stringify","allowedChildren","module","exports"],"mappings":"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","sourcesContent":["// Copyright IBM Corp. 2016,2019. All Rights Reserved.\n// Node module: strong-soap\n// This file is licensed under the MIT License.\n// License text available at https://opensource.org/licenses/MIT\n\n'use strict';\n\nvar XSDElement = require('./xsdElement');\nvar Sequence = require('./sequence');\nvar Choice = require('./choice');\nvar QName = require('../qname');\nvar g = require('../../globalize');\n\nclass Restriction extends XSDElement {\n  constructor(nsName, attrs, options) {\n    super(nsName, attrs, options);\n  }\n\n  addChild(child) {\n    /*\n     * simpleType: @base|minExclusive|minInclusive|maxExclusive|maxInclusive|\n     *             totalDigits|fractionDigits|length|minLength|maxLength|\n     *             enumeration|whiteSpace|pattern\n     * simpleContent: @base|minExclusive|minInclusive|maxExclusive|maxInclusive|\n     *                totalDigits|fractionDigits|length|minLength|maxLength|\n     *                enumeration|whiteSpace|pattern|\n     *                attribute|attributeGroup\n     * complexContent: @base|minExclusive|minInclusive|maxExclusive|maxInclusive|\n     *                 totalDigits|fractionDigits|length|minLength|maxLength|\n     *                 enumeration|whiteSpace|pattern|\n     *                 group|all|choice|sequence|\n     *                 attribute|attributeGroup\n     */\n    switch (child.name) {\n      case 'minExclusive':\n      case 'minInclusive':\n      case 'maxExclusive':\n      case 'maxInclusive':\n      case 'totalDigits':\n      case 'fractionDigits':\n      case 'length':\n      case 'minLength':\n      case 'maxLength':\n      case 'whiteSpace':\n      case 'pattern':\n        this[child.name] = child.$value;\n        break;\n      case 'enumeration':\n        this[child.name] = this[child.name] || [];\n        this[child.name].push(child.$value);\n        break;\n    }\n    if (this.parent.elementName === 'simpleContent') {\n      //\n    } else if (this.parent.elementName === 'complexContent') {\n      //\n    }\n  }\n\n  describe(definitions) {\n    if (this.descriptor) return this.descriptor;\n    var descriptor = this.descriptor =\n      new XSDElement.TypeDescriptor();\n    if (this.base) {\n      descriptor.add(this.base.describe(definitions));\n    }\n    return this.describeChildren(definitions, descriptor);\n  }\n\n  postProcess(defintions) {\n    if(this.base) return;\n    var schemas = defintions.schemas;\n    if (this.$base) {\n      if (this.parent.name === 'simpleContent' ||\n        this.parent.name === 'simpleType') {\n        this.base = this.resolveSchemaObject(schemas, 'simpleType', this.$base);\n      } else if (this.parent.name === 'complexContent') {\n        this.base = this.resolveSchemaObject(schemas, 'complexType', this.$base);\n        //\n      }\n    }\n    if(this.base) {\n      this.base.postProcess(defintions);\n    }\n  }\n\n  _getFractionDigitCount(val) {\n    var lastDotPos = val.lastIndexOf('.');\n    if (lastDotPos !== -1) {\n      return val.length - 1 - lastDotPos;\n    }\n\n    return 0;\n  }\n\n  _getTotalDigitCount(val) {\n    var stripped = val.replace('-', '').replace('.', '').trim();\n    return stripped.length;\n  }\n\n  enforce(val) {\n    var violations = [];\n\n    if (this.base) {\n      if (this.base.jsType === Boolean) {\n        val = val === 'true' || val === true;\n      } else if (typeof this.base.jsType === 'function' && this.base.jsType !== Date && this.base.jsType !== Number) {\n        val = this.base.jsType(val);\n      }\n\n      if(this.base.jsType === Number) {\n        if(isNaN(val)){\n          violations.push('value is not a number (' + val + ')');\n        }\n      }\n    }\n\n    if (this.minExclusive !== undefined) {\n      if (val <= this.minExclusive) {\n        violations.push('value is less or equal than minExclusive (' + val + ' <= ' + this.minExclusive + ')');\n      }\n    }\n\n    if (this.minInclusive !== undefined) {\n      if (val < this.minInclusive) {\n        violations.push('value is less than minInclusive (' + val + ' < ' + this.minInclusive + ')');\n      }\n    }\n\n    if (this.maxExclusive !== undefined) {\n      if (val >= this.maxExclusive) {\n        violations.push('value is greater or equal than maxExclusive (' + val + ' >= ' + this.maxExclusive + ')');\n      }\n    }\n\n    if (this.maxInclusive !== undefined) {\n      if (val > this.maxInclusive) {\n        violations.push('value is greater than maxInclusive (' + val + ' > ' + this.maxInclusive + ')');\n      }\n    }\n\n    if (this.fractionDigits !== undefined) {\n      if (typeof val === 'string') {\n        var fractionDigitCount = this._getFractionDigitCount(val);\n        if (fractionDigitCount > this.fractionDigits) {\n          violations.push('value has more decimal places than allowed (' + fractionDigitCount + ' > ' + this.fractionDigits + ')');\n        }\n      } else if (typeof val === 'number') {\n        val = val.toFixed(this.fractionDigits);\n      }\n    }\n\n    if (this.totalDigits !== undefined) {\n      if (typeof val === 'string') {\n        var totalDigits = this._getTotalDigitCount(val);\n        if (totalDigits > this.totalDigits) {\n          violations.push('value has more digits than allowed (' + totalDigits + ' > ' + this.totalDigits + ')');\n        }\n      } else if (typeof val === 'number') {\n        var integerDigits = parseInt(val).toString().replace('-', '').length;\n        if (integerDigits > this.totalDigits) {\n          violations.push('value has more integer digits than allowed (' + integerDigits + ' > ' + this.totalDigits + ')');\n        } else {\n          val = val.toFixed(this.totalDigits - integerDigits);\n        }\n      }\n    }\n\n    if (this.length !== undefined) {\n      if (val.length !== parseInt(this.length)) {\n        violations.push('lengths don\\'t match (' + val.length + ' != ' + this.length + ')');\n      }\n    }\n\n    if (this.maxLength !== undefined) {\n      if (val.length > this.maxLength) {\n        violations.push('length is bigger than maxLength (' + val.length + ' > ' + this.maxLength + ')');\n      }\n    }\n\n    if (this.minLength !== undefined) {\n      if (val.length < this.minLength) {\n        violations.push('length is smaller than minLength (' + val.length + ' < ' + this.minLength + ')');\n      }\n    }\n\n    if (this.whiteSpace === 'replace') {\n      val = val.replace(/[\\n\\r\\t]/mg, ' ');\n    } else if (this.whiteSpace === 'collapse') {\n      val = val.replace(/[\\n\\r\\t]/mg, ' ').replace(/[ ]+/mg, ' ').trim();\n    }\n\n    if (this.pattern) {\n      if (!new RegExp(this.pattern).test(val)) {\n        violations.push('value doesn\\'t match the required pattern (' + val + ' !match ' + this.pattern + ')');\n      }\n    }\n\n    if (this.enumeration) {\n      if (this.enumeration.indexOf(val) === -1) {\n        violations.push('value is not in the list of valid values (' + val + ' is not in ' + this.enumeration + ')');\n      }\n    }\n\n    if (violations.length > 0) {\n      throw new Error(g.f('The field %s cannot have value %s due to the violations: %s', this.parent.$name, val, JSON.stringify(violations)));\n    }\n\n    return val;\n  }\n}\n\nRestriction.elementName = 'restriction';\nRestriction.allowedChildren = ['annotation', 'minExclusive', 'minInclusive',\n  'maxExclusive', 'maxInclusive', 'totalDigits', 'fractionDigits', 'length',\n  'minLength', 'maxLength', 'enumeration', 'whiteSpace', 'pattern',\n  'group', 'all', 'choice', 'sequence', 'attribute', 'attributeGroup'];\n\nmodule.exports = Restriction;\n"],"file":"restriction.js"}