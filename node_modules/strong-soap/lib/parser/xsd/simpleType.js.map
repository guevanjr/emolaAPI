{"version":3,"sources":["../../../src/parser/xsd/simpleType.js"],"names":["XSDElement","require","descriptor","helper","xsd","SimpleType","constructor","nsName","attrs","options","addChild","child","name","describe","definitions","TypeDescriptor","$name","xmlns","nsURI","isSimple","postProcess","type","undefined","String","targetNamespace","namespaces","getBuiltinType","jsType","restriction","base","list","itemType","union","memberTypes","forEach","t","push","elementName","allowedChildren","module","exports"],"mappings":"AAAA;AACA;AACA;AACA;AAEA;;AAEA,IAAIA,UAAU,GAAGC,OAAO,CAAC,cAAD,CAAxB;;AACA,IAAIC,UAAU,GAAGD,OAAO,CAAC,cAAD,CAAxB;;AACA,IAAIE,MAAM,GAAGF,OAAO,CAAC,WAAD,CAApB;;AACA,IAAIG,GAAG,GAAGH,OAAO,CAAC,QAAD,CAAjB;;AAEA,MAAMI,UAAN,SAAyBL,UAAzB,CAAoC;AAClCM,EAAAA,WAAW,CAACC,MAAD,EAASC,KAAT,EAAgBC,OAAhB,EAAyB;AAClC,UAAMF,MAAN,EAAcC,KAAd,EAAqBC,OAArB;AACD;;AAEDC,EAAAA,QAAQ,CAACC,KAAD,EAAQ;AACd,SAAKA,KAAK,CAACC,IAAX,IAAmBD,KAAnB;AACD;;AAEDE,EAAAA,QAAQ,CAACC,WAAD,EAAc;AACpB,QAAIZ,UAAU,GAAG,KAAKA,UAAL,GAAkB,IAAIF,UAAU,CAACe,cAAf,EAAnC;AACAb,IAAAA,UAAU,CAACU,IAAX,GAAkB,KAAKI,KAAL,IAAc,KAAKJ,IAArC;AACAV,IAAAA,UAAU,CAACe,KAAX,GAAmB,KAAKC,KAAxB;AACAhB,IAAAA,UAAU,CAACiB,QAAX,GAAsB,IAAtB;AACA,WAAOjB,UAAP;AACD;;AAEDkB,EAAAA,WAAW,CAACN,WAAD,EAAc;AACvB,QAAI,KAAKO,IAAL,KAAcC,SAAlB,EAA6B;AAC7B,SAAKD,IAAL,GAAYE,MAAZ,CAFuB,CAEH;;AACpB,QAAI,KAAKC,eAAL,KAAyBrB,MAAM,CAACsB,UAAP,CAAkBrB,GAA/C,EAAoD;AAClD,WAAKiB,IAAL,GAAYjB,GAAG,CAACsB,cAAJ,CAAmB,KAAKV,KAAxB,EAA+BW,MAA3C;AACA;AACD;;AACD,QAAI,KAAKC,WAAT,EAAsB;AACpB,WAAKA,WAAL,CAAiBR,WAAjB,CAA6BN,WAA7B;;AACA,UAAI,KAAKc,WAAL,CAAiBC,IAArB,EAA2B;AACzB;AACA,aAAKR,IAAL,GAAY,KAAKO,WAAL,CAAiBC,IAA7B;AACD;AACF,KAND,MAMO,IAAI,KAAKC,IAAT,EAAe;AACpB,WAAKA,IAAL,CAAUV,WAAV,CAAsBN,WAAtB;;AACA,UAAI,KAAKgB,IAAL,CAAUC,QAAd,EAAwB;AACtB,aAAKD,IAAL,CAAUC,QAAV,CAAmBX,WAAnB,CAA+BN,WAA/B;AACA,aAAKO,IAAL,GAAY,CAAC,KAAKS,IAAL,CAAUC,QAAV,CAAmBV,IAApB,CAAZ;AACD;AACF,KANM,MAMA,IAAI,KAAKW,KAAT,EAAgB;AACrB,UAAIC,WAAW,GAAG,EAAlB;AACAA,MAAAA,WAAW,CAACD,KAAZ,GAAoB,IAApB,CAFqB,CAEK;;AAC1B,WAAKA,KAAL,CAAWZ,WAAX,CAAuBN,WAAvB;;AACA,UAAI,KAAKkB,KAAL,CAAWC,WAAf,EAA4B;AAC1B,aAAKD,KAAL,CAAWC,WAAX,CAAuBC,OAAvB,CAA+B,UAASC,CAAT,EAAY;AACzCA,UAAAA,CAAC,CAACf,WAAF,CAAcN,WAAd;AACAmB,UAAAA,WAAW,CAACG,IAAZ,CAAiBD,CAAC,CAACd,IAAnB;AACD,SAHD;AAIA,aAAKA,IAAL,GAAYY,WAAZ;AACD;AACF;AACF;;AAhDiC;;AAmDpC5B,UAAU,CAACgC,WAAX,GAAyB,YAAzB;AACAhC,UAAU,CAACiC,eAAX,GAA6B,CAAC,YAAD,EAAe,MAAf,EAAuB,OAAvB,EAAgC,aAAhC,CAA7B;AAEAC,MAAM,CAACC,OAAP,GAAiBnC,UAAjB","sourcesContent":["// Copyright IBM Corp. 2016,2017. All Rights Reserved.\n// Node module: strong-soap\n// This file is licensed under the MIT License.\n// License text available at https://opensource.org/licenses/MIT\n\n'use strict';\n\nvar XSDElement = require('./xsdElement');\nvar descriptor = require('./descriptor');\nvar helper = require('../helper');\nvar xsd = require('../xsd');\n\nclass SimpleType extends XSDElement {\n  constructor(nsName, attrs, options) {\n    super(nsName, attrs, options);\n  }\n\n  addChild(child) {\n    this[child.name] = child;\n  }\n\n  describe(definitions) {\n    var descriptor = this.descriptor = new XSDElement.TypeDescriptor();\n    descriptor.name = this.$name || this.name;\n    descriptor.xmlns = this.nsURI;\n    descriptor.isSimple = true;\n    return descriptor;\n  }\n\n  postProcess(definitions) {\n    if (this.type !== undefined) return;\n    this.type = String; // Default to String\n    if (this.targetNamespace === helper.namespaces.xsd) {\n      this.type = xsd.getBuiltinType(this.$name).jsType;\n      return;\n    }\n    if (this.restriction) {\n      this.restriction.postProcess(definitions);\n      if (this.restriction.base) {\n        // Use the restriction base for more information on the xs:type\n        this.type = this.restriction.base;\n      }\n    } else if (this.list) {\n      this.list.postProcess(definitions);\n      if (this.list.itemType) {\n        this.list.itemType.postProcess(definitions);\n        this.type = [this.list.itemType.type];\n      }\n    } else if (this.union) {\n      let memberTypes = [];\n      memberTypes.union = true; // Set the union flag to true\n      this.union.postProcess(definitions);\n      if (this.union.memberTypes) {\n        this.union.memberTypes.forEach(function(t) {\n          t.postProcess(definitions);\n          memberTypes.push(t.type);\n        });\n        this.type = memberTypes;\n      }\n    }\n  }\n}\n\nSimpleType.elementName = 'simpleType';\nSimpleType.allowedChildren = ['annotation', 'list', 'union', 'restriction'];\n\nmodule.exports = SimpleType;\n"],"file":"simpleType.js"}