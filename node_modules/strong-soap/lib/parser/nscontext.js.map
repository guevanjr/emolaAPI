{"version":3,"sources":["../../src/parser/nscontext.js"],"names":["NamespaceScope","constructor","parent","namespaces","prefixCount","getNamespaceURI","prefix","localOnly","nsURI","uri","getNamespaceMapping","declared","mapping","getPrefix","p","getPrefixMapping","generatePrefix","base","NamespaceContext","scopes","pushContext","addNamespace","currentScope","scope","push","popContext","pop","registerNamespace","declareNamespace","module","exports"],"mappings":"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","sourcesContent":["// Copyright IBM Corp. 2016. All Rights Reserved.\n// Node module: strong-soap\n// This file is licensed under the MIT License.\n// License text available at https://opensource.org/licenses/MIT\n\n'use strict';\n\n/**\n * Scope for XML namespaces\n * @param {NamespaceScope} [parent] Parent scope\n * @returns {NamespaceScope}\n * @constructor\n */\nclass NamespaceScope {\n  constructor(parent) {\n    this.parent = parent;\n    this.namespaces = {};\n    this.prefixCount = 0;\n  }\n\n  /**\n   * Look up the namespace URI by prefix\n   * @param {String} prefix Namespace prefix\n   * @param {Boolean} [localOnly] Search current scope only\n   * @returns {String} Namespace URI\n   */\n  getNamespaceURI(prefix, localOnly) {\n    switch (prefix) {\n      case 'xml':\n        return 'http://www.w3.org/XML/1998/namespace';\n      case 'xmlns':\n        return 'http://www.w3.org/2000/xmlns/';\n      default:\n        var nsURI = this.namespaces[prefix];\n        /*jshint -W116 */\n        if (nsURI != null) {\n          return nsURI.uri;\n        } else if (!localOnly && this.parent) {\n          return this.parent.getNamespaceURI(prefix);\n        } else {\n          return null;\n        }\n    }\n  }\n\n  getNamespaceMapping(prefix) {\n    switch (prefix) {\n      case 'xml':\n        return {\n          uri: 'http://www.w3.org/XML/1998/namespace',\n          prefix: 'xml',\n          declared: true\n        };\n      case 'xmlns':\n        return {\n          uri: 'http://www.w3.org/2000/xmlns/',\n          prefix: 'xmlns',\n          declared: true\n        };\n      default:\n        var mapping = this.namespaces[prefix];\n        /*jshint -W116 */\n        if (mapping != null) {\n          return mapping;\n        } else if (this.parent) {\n          return this.parent.getNamespaceMapping(prefix);\n        } else {\n          return null;\n        }\n    }\n  }\n\n  /**\n   * Look up the namespace prefix by URI\n   * @param {String} nsURI Namespace URI\n   * @param {Boolean} [localOnly] Search current scope only\n   * @returns {String} Namespace prefix\n   */\n  getPrefix(nsURI, localOnly) {\n    switch (nsURI) {\n      case 'http://www.w3.org/XML/1998/namespace':\n        return 'xml';\n      case 'http://www.w3.org/2000/xmlns/':\n        return 'xmlns';\n      default:\n        for (var p in this.namespaces) {\n          if (this.namespaces[p].uri === nsURI) {\n            return p;\n          }\n        }\n        if (!localOnly && this.parent) {\n          return this.parent.getPrefix(nsURI);\n        } else {\n          return null;\n        }\n    }\n  }\n\n  /**\n   * Look up the namespace prefix by URI\n   * @param {String} nsURI Namespace URI\n   * @param {Boolean} [localOnly] Search current scope only\n   * @returns {String} Namespace prefix\n   */\n  getPrefixMapping(nsURI, localOnly) {\n    switch (nsURI) {\n      case 'http://www.w3.org/XML/1998/namespace':\n        return 'xml';\n      case 'http://www.w3.org/2000/xmlns/':\n        return 'xmlns';\n      default:\n        for (var p in this.namespaces) {\n          if (this.namespaces[p].uri === nsURI && this.namespaces[p].declared===true) {\n            return this.namespaces[p];\n          }\n        }\n        if (!localOnly && this.parent) {\n          return this.parent.getPrefixMapping(nsURI);\n        } else {\n          return null;\n        }\n    }\n  }\n\n  /**\n   * Generate a new prefix that is not mapped to any uris\n   * @param base {string} The base for prefix\n   * @returns {string}\n   */\n  generatePrefix(base) {\n    base = base || 'ns';\n    while (true) {\n      let prefix = 'ns' + (++this.prefixCount);\n      if (!this.getNamespaceURI(prefix)) {\n        // The prefix is not used\n        return prefix;\n      }\n    }\n  }\n}\n\n/**\n * Namespace context that manages hierarchical scopes\n * @returns {NamespaceContext}\n * @constructor\n */\nclass NamespaceContext {\n  constructor() {\n    this.scopes = [];\n    this.pushContext();\n  }\n\n  /**\n   * Add a prefix/URI namespace mapping\n   * @param {String} prefix Namespace prefix\n   * @param {String} nsURI Namespace URI\n   * @param {Boolean} [localOnly] Search current scope only\n   * @returns {boolean} true if the mapping is added or false if the mapping\n   * already exists\n   */\n  addNamespace(prefix, nsURI, localOnly) {\n    if (this.getNamespaceURI(prefix, localOnly) === nsURI) {\n      return false;\n    }\n    if (this.currentScope) {\n      this.currentScope.namespaces[prefix] = {\n        uri: nsURI,\n        prefix: prefix,\n        declared: false\n      };\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Push a scope into the context\n   * @returns {NamespaceScope} The current scope\n   */\n  pushContext() {\n    var scope = new NamespaceScope(this.currentScope);\n    this.scopes.push(scope);\n    this.currentScope = scope;\n    return scope;\n  }\n\n  /**\n   * Pop a scope out of the context\n   * @returns {NamespaceScope} The removed scope\n   */\n  popContext() {\n    var scope = this.scopes.pop();\n    if (scope) {\n      this.currentScope = scope.parent;\n    } else {\n      this.currentScope = null;\n    }\n    return scope;\n  }\n\n  /**\n   * Look up the namespace URI by prefix\n   * @param {String} prefix Namespace prefix\n   * @param {Boolean} [localOnly] Search current scope only\n   * @returns {String} Namespace URI\n   */\n  getNamespaceURI(prefix, localOnly) {\n    return this.currentScope &&\n      this.currentScope.getNamespaceURI(prefix, localOnly);\n  }\n\n  /**\n   * Look up the namespace prefix by URI\n   * @param {String} nsURI Namespace URI\n   * @param {Boolean} [localOnly] Search current scope only\n   * @returns {String} Namespace prefix\n   */\n  getPrefix(nsURI, localOnly) {\n    return this.currentScope &&\n      this.currentScope.getPrefix(nsURI, localOnly);\n  }\n\n  /**\n   * Look up the namespace mapping by nsURI\n   * @param {String} nsURI Namespace URI\n   * @returns {String} Namespace mapping\n   */\n  getPrefixMapping(nsURI) {\n    return this.currentScope &&\n      this.currentScope.getPrefixMapping(nsURI);\n  }\n\n  /**\n   * Generate a new prefix that is not mapped to any uris\n   * @param base {string} The base for prefix\n   * @returns {string}\n   */\n  generatePrefix(base) {\n    return this.currentScope &&\n      this.currentScope.generatePrefix(base);\n  }\n\n  /**\n   * Register a namespace\n   * @param {String} prefix Namespace prefix\n   * @param {String} nsURI Namespace URI\n   * @returns {Object} The matching or generated namespace mapping\n   */\n  registerNamespace(prefix, nsURI) {\n    var mapping;\n    if (!prefix) {\n      prefix = this.generatePrefix();\n    } else {\n      mapping = this.currentScope.getNamespaceMapping(prefix);\n      if (mapping && mapping.uri === nsURI) {\n        // Found an existing mapping\n        return mapping;\n      }\n    }\n    if (this.getNamespaceURI(prefix)) {\n      // The prefix is already mapped to a different namespace\n      prefix = this.generatePrefix();\n    }\n    if (this.currentScope) {\n      mapping = {\n        uri: nsURI,\n        prefix: prefix,\n        declared: false\n      };\n      this.currentScope.namespaces[prefix] = mapping;\n      return mapping;\n    }\n    return null;\n  }\n\n  /**\n   * Declare a namespace prefix/uri mapping\n   * @param {String} prefix Namespace prefix\n   * @param {String} nsURI Namespace URI\n   * @returns {Boolean} true if the declaration is created\n   */\n  declareNamespace(prefix, nsURI) {\n    var mapping = this.registerNamespace(prefix, nsURI);\n    if (!mapping) return null;\n    if (mapping.declared) {\n      return null;\n    }\n    mapping = this.currentScope.namespaces[mapping.prefix];\n    if (mapping) {\n      mapping.declared = true;\n    } else {\n      mapping = {\n        prefix: mapping.prefix,\n        uri: nsURI,\n        declared: true\n      };\n      this.currentScope.namespaces[mapping.prefix] = mapping;\n    }\n    return mapping;\n  };\n}\n\nmodule.exports = NamespaceContext;\n\n\n\n"],"file":"nscontext.js"}