{"version":3,"sources":["../../src/parser/typeRegistry.js"],"names":["helper","require","elementTypes","registry","getRegistry","elementTypesByName","forEach","t","type","targetNamespace","elementName","getElementType","qname","ElementType","nsURI","name","XSDElement","WSDLElement","SOAPElement","SOAP12Element","Element","namespaces","wsdl","xsd","soap","soap12","exports"],"mappings":"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","sourcesContent":["// Copyright IBM Corp. 2016,2017. All Rights Reserved.\n// Node module: strong-soap\n// This file is licensed under the MIT License.\n// License text available at https://opensource.org/licenses/MIT\n\n'use strict';\n\n/**\n * XML Schema Elements\n *\n * element --> @name|@ref|@type|@maxOccurs|@minOccurs|\n *             simpleType|complexType\n * simpleType --> @name|restriction\n * complexType --> @name|simpleContent|complexContent|\n *                 group|all|choice|sequence|\n *                 attribute|attributeGroup\n * simpleContent --> restriction|extension\n * complexContent --> restriction|extension\n * restriction -->\n *   simpleType: @base|minExclusive|minInclusive|maxExclusive|maxInclusive|\n *               totalDigits|fractionDigits|length|minLength|maxLength|\n *               enumeration|whiteSpace|pattern\n *   simpleContent: @base|minExclusive|minInclusive|maxExclusive|maxInclusive|\n *                  totalDigits|fractionDigits|length|minLength|maxLength|\n *                  enumeration|whiteSpace|pattern|\n *                  attribute|attributeGroup\n *   complexContent: @base|minExclusive|minInclusive|maxExclusive|maxInclusive|\n *                   totalDigits|fractionDigits|length|minLength|maxLength|\n *                   enumeration|whiteSpace|pattern|\n *                   group|all|choice|sequence|\n *                   attribute|attributeGroup\n * extension --> @base|group|all|choice|sequence|\n *               attribute|attributeGroup\n * group --> @name|@ref|all|choice|sequence\n * attribute --> @name|@ref|@default|@fixed|@type|@use\n * attributeGroup --> @name|@ref|attribute|attributeGroup\n * all --> @maxOccurs|@minOccurs|element\n * choice --> @maxOccurs|@minOccurs|element|group|choice|sequence|any\n * sequence --> @maxOccurs|@minOccurs|element|group|choice|sequence|any\n */\n\nvar helper = require('./helper');\n\nvar elementTypes = [\n  './xsd/all',\n  './xsd/annotation',\n  './xsd/any',\n  './xsd/anyAttribute',\n  './xsd/attribute',\n  './xsd/attributeGroup',\n  './xsd/choice',\n  './xsd/complexContent',\n  './xsd/complexType',\n  './xsd/documentation',\n  './xsd/element',\n  './xsd/unique',\n  './xsd/key',\n  './xsd/keyref',\n  './xsd/extension',\n  './xsd/group',\n  './xsd/import',\n  './xsd/include',\n  './xsd/restriction',\n  './xsd/sequence',\n  './xsd/simpleContent',\n  './xsd/simpleType',\n  './xsd/list',\n  './xsd/union',\n  './xsd/schema',\n  './wsdl/binding',\n  './wsdl/definitions',\n  './wsdl/fault',\n  './wsdl/import',\n  './wsdl/input',\n  './wsdl/message',\n  './wsdl/operation',\n  './wsdl/output',\n  './wsdl/part',\n  './wsdl/port',\n  './wsdl/portType',\n  './wsdl/service',\n  './wsdl/types',\n  './wsdl/documentation',\n  './soap/body',\n  './soap/header',\n  './soap/headerFault',\n  './soap/fault',\n  './soap12/body',\n  './soap12/header',\n  './soap12/headerFault',\n  './soap12/fault'\n];\n\nvar registry;\n\nfunction getRegistry() {\n  if (registry) {\n    return registry;\n  }\n  registry = {\n    elementTypes: {},\n    elementTypesByName: {}\n  };\n  elementTypes.forEach(function(t) {\n    var type = require(t);\n    registry.elementTypes['{' + type.targetNamespace + '}' + type.elementName] = type;\n    registry.elementTypesByName[type.elementName] = type;\n  });\n  return registry;\n}\n\nfunction getElementType(qname) {\n  var registry = getRegistry();\n  var ElementType =\n    registry.elementTypes['{' + qname.nsURI + '}' + qname.name];\n  if (!ElementType) {\n    let XSDElement = require('./xsd/xsdElement');\n    let WSDLElement = require('./wsdl/wsdlElement');\n    let SOAPElement = require('./soap/soapElement');\n    let SOAP12Element = require('./soap12/soapElement');\n    let Element = require('./element');\n    if (qname.nsURI === helper.namespaces.wsdl) {\n      ElementType = WSDLElement;\n    } else if (qname.nsURI === helper.namespaces.xsd) {\n      ElementType = XSDElement;\n    } else if (qname.nsURI === helper.namespaces.soap) {\n      ElementType = SOAPElement;\n    } else if (qname.nsURI === helper.namespaces.soap12) {\n      ElementType = SOAP12Element;\n    } else {\n      ElementType = Element;\n    }\n  }\n  return ElementType;\n}\n\nexports.getRegistry = getRegistry;\nexports.getElementType = getElementType;\n"],"file":"typeRegistry.js"}