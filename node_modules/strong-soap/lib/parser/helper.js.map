{"version":3,"sources":["../../src/parser/helper.js"],"names":["primitiveDataTypes","string","String","boolean","Boolean","decimal","Number","float","double","duration","dateTime","Date","time","date","gYearMonth","gYear","gMonthDay","gDay","gMonth","hexBinary","base64Binary","anyURI","QName","NOTATION","derivedDataTypes","normalizedString","token","language","NMTOKEN","NMTOKENS","Name","NCName","ID","IDREF","IDREFS","ENTITY","ENTITIES","integer","nonPositiveInteger","negativeInteger","long","int","short","byte","nonNegativeInteger","unsignedLong","unsignedInt","unsignedShort","unsignedByte","positiveInteger","schemaTypes","s","namespaces","wsdl","soap","soap12","http","mime","soapenc","soapenv","xsi_rc","xsd_rc","xsd","xsi","xml","xmlEscape","obj","substr","replace","crypto","require","exports","passwordDigest","nonce","created","password","pwHash","createHash","rawNonce","Buffer","from","toString","update","digest","EMPTY_PREFIX","findPrefix","xmlnsMapping","nsURI","n","extend","base","Object","keys","forEach","key","hasOwnProperty","_Set","constructor","set","Set","add","val","Array","isArray","indexOf","push","has"],"mappings":"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","sourcesContent":["// Copyright IBM Corp. 2016,2019. All Rights Reserved.\n// Node module: strong-soap\n// This file is licensed under the MIT License.\n// License text available at https://opensource.org/licenses/MIT\n\n'use strict';\n\n// Primitive data types\nvar primitiveDataTypes = {\n  string: String,\n  boolean: Boolean,\n  decimal: Number,\n  float: Number,\n  double: Number,\n  duration: Number,\n  dateTime: Date,\n  time: Date,\n  date: Date,\n  gYearMonth: Number,\n  gYear: Number,\n  gMonthDay: Number,\n  gDay: Number,\n  gMonth: Number,\n  hexBinary: String,\n  base64Binary: String,\n  anyURI: String,\n  QName: String,\n  NOTATION: String\n};\n\n// Derived data types\nvar derivedDataTypes = {\n  normalizedString: String,\n  token: String,\n  language: String,\n  NMTOKEN: String,\n  NMTOKENS: String,\n  Name: String,\n  NCName: String,\n  ID: String,\n  IDREF: String,\n  IDREFS: String,\n  ENTITY: String,\n  ENTITIES: String,\n  integer: Number,\n  nonPositiveInteger: Number,\n  negativeInteger: Number,\n  long: Number,\n  int: Number,\n  short: Number,\n  byte: Number,\n  nonNegativeInteger: Number,\n  unsignedLong: Number,\n  unsignedInt: Number,\n  unsignedShort: Number,\n  unsignedByte: Number,\n  positiveInteger: Number\n};\n\n// Built-in data types\nvar schemaTypes = {};\n\nfor (let s in primitiveDataTypes) {\n  schemaTypes[s] = primitiveDataTypes[s];\n}\nfor (let s in derivedDataTypes) {\n  schemaTypes[s] = derivedDataTypes[s];\n}\n\nvar namespaces = {\n  wsdl: 'http://schemas.xmlsoap.org/wsdl/',\n  soap: 'http://schemas.xmlsoap.org/wsdl/soap/',\n  soap12: 'http://schemas.xmlsoap.org/wsdl/soap12/',\n  http: 'http://schemas.xmlsoap.org/wsdl/http/',\n  mime: 'http://schemas.xmlsoap.org/wsdl/mime/',\n  soapenc: 'http://schemas.xmlsoap.org/soap/encoding/',\n  soapenv: 'http://schemas.xmlsoap.org/soap/envelope/',\n  xsi_rc: 'http://www.w3.org/2000/10/XMLSchema-instance',\n  xsd_rc: 'http://www.w3.org/2000/10/XMLSchema',\n  xsd: 'http://www.w3.org/2001/XMLSchema',\n  xsi: 'http://www.w3.org/2001/XMLSchema-instance',\n  xml: 'http://www.w3.org/XML/1998/namespace'\n};\n\nfunction xmlEscape(obj) {\n  if (typeof obj === 'string') {\n    if (obj.substr(0, 9) === '<![CDATA[' && obj.substr(-3) === \"]]>\") {\n      return obj;\n    }\n    return obj\n      .replace(/&/g, '&amp;')\n      .replace(/</g, '&lt;')\n      .replace(/>/g, '&gt;')\n      .replace(/\"/g, '&quot;')\n      .replace(/'/g, '&apos;');\n  }\n\n  return obj;\n}\n\nvar crypto = require('crypto');\nexports.passwordDigest = function passwordDigest(nonce, created, password) {\n  // digest = base64 ( sha1 ( nonce + created + password ) )\n  var pwHash = crypto.createHash('sha1');\n  var rawNonce = Buffer.from(nonce || '', 'base64').toString('binary');\n  pwHash.update(rawNonce + created + password);\n  return pwHash.digest('base64');\n};\n\nvar EMPTY_PREFIX = ''; // Prefix for targetNamespace\n\nexports.EMPTY_PREFIX = EMPTY_PREFIX;\n\n/**\n * Find a key from an object based on the value\n * @param {Object} Namespace prefix/uri mapping\n * @param {*} nsURI value\n * @returns {String} The matching key\n */\nexports.findPrefix = function(xmlnsMapping, nsURI) {\n  for (var n in xmlnsMapping) {\n    if (n === EMPTY_PREFIX) continue;\n    if (xmlnsMapping[n] === nsURI)\n      return n;\n  }\n};\n\nexports.extend = function extend(base, obj) {\n  if (base !== null && typeof base === \"object\" &&\n    obj !== null && typeof obj === \"object\") {\n    Object.keys(obj).forEach(function(key) {\n      if (!base.hasOwnProperty(key))\n        base[key] = obj[key];\n    });\n  }\n  return base;\n};\n\nexports.schemaTypes = schemaTypes;\nexports.xmlEscape = xmlEscape;\nexports.namespaces = namespaces;\n\nclass _Set {\n  constructor() {\n    this.set = typeof Set === 'function' ? new Set() : [];\n  }\n\n  add(val) {\n    if (Array.isArray(this.set)) {\n      if (this.set.indexOf(val) === -1) {\n        this.set.push(val);\n      }\n    } else {\n      this.set.add(val);\n    }\n    return this;\n  }\n\n  has(val) {\n    if (Array.isArray(this.set)) {\n      return this.set.indexOf(val) !== -1;\n    } else {\n      return this.set.has(val);\n    }\n  }\n}\n\nexports.Set = _Set;\n\n"],"file":"helper.js"}