{"version":3,"sources":["../../../src/parser/wsdl/parameter.js"],"names":["WSDLElement","require","QName","debug","Parameter","constructor","nsName","attrs","options","addChild","child","name","body","headers","push","fault","postProcess","definitions","parent","messageName","parse","$message","message","messages","console","error","Error","$parts","parts","split","i","n","length","header","$part","part","p","allowedChildren","module","exports"],"mappings":"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","sourcesContent":["// Copyright IBM Corp. 2016,2018. All Rights Reserved.\n// Node module: strong-soap\n// This file is licensed under the MIT License.\n// License text available at https://opensource.org/licenses/MIT\n\n'use strict';\n\nvar WSDLElement = require('./wsdlElement');\nvar QName = require('../qname');\nvar debug = require('debug')('strong-soap:wsdl:parameter');\n\n/**\n * Base class for Input/Output\n */\nclass Parameter extends WSDLElement {\n  constructor(nsName, attrs, options) {\n    super(nsName, attrs, options);\n  }\n\n  addChild(child) {\n    // soap:body\n    if (child.name === 'body') {\n      this.body = child;\n    } else if (child.name === 'header') {\n      this.headers = this.headers || [];\n      // soap:header\n      this.headers.push(child);\n    } else if (child.name === 'fault') {\n      //Revisit. Never gets executed.\n      this.fault = child;\n    }\n  }\n\n  postProcess(definitions) {\n    // portType.operation.*\n    if (this.parent.parent.name === 'portType') {\n      // Resolve $message\n      var messageName = QName.parse(this.$message).name;\n      var message = definitions.messages[messageName];\n      if (!message) {\n        console.error('Unable to resolve message %s for', this.$message, this);\n        throw new Error('Unable to resolve message ' + this.$message);\n      }\n      message.postProcess(definitions);\n      this.message = message;\n    }\n\n    // binding.operation.*\n    if (this.parent.parent.name === 'binding') {\n      if (this.body) {\n        if (this.body.$parts) {\n          this.body.parts = {};\n          let parts = this.body.$parts.split(/\\s+/);\n          for (let i = 0, n = parts.length; i < n; i++) {\n            this.body.parts[parts[i]] = this.message.parts[parts[i]];\n          }\n        } else {\n          if (this.message && this.message.parts) {\n            this.body.parts = this.message.parts;\n          }\n        }\n      }\n      if (this.headers) {\n        for (let i = 0, n = this.headers.length; i < n; i++) {\n          let header = this.headers[i];\n          let message;\n          if (header.$message) {\n            let messageName = QName.parse(header.$message).name;\n            message = definitions.messages[messageName];\n            if (message) {\n              message.postProcess(definitions);\n            } else {\n              debug('Message not found: ', header.$message);\n            }\n          } else {\n            message = this.message;\n          }\n          if (header.$part && message) {\n            header.part = message.parts[header.$part];\n          }\n        }\n      }\n      //Revisit.. this.name is always undefined because there is no code which calls addChild(..) with child.name = 'fault.\n      //code works inspite of not executing this block. Remove it?\n      if (this.name === 'fault') {\n        let message = this.fault.parent.message;\n        if (message) {\n          message.postProcess(definitions);\n          for (let p in message.parts) {\n            // The fault message MUST have only one part per WSDL 1.1 spec\n            this.fault.part = message.parts[p];\n            break;\n          }\n        } else {\n          debug('Message not found: ', this.fault.$message);\n        }\n      }\n    }\n  }\n}\n\nParameter.allowedChildren = [\n  'body',\n  'SecuritySpecRef',\n  'documentation',\n  'header'\n];\n\nmodule.exports = Parameter;\n"],"file":"parameter.js"}