{"version":3,"sources":["../../../src/parser/wsdl/portType.js"],"names":["WSDLElement","require","PortType","constructor","nsName","attrs","options","postProcess","definitions","operations","children","i","child","name","$name","describe","method","elementName","allowedChildren","module","exports"],"mappings":"AAAA;AACA;AACA;AACA;AAEA;;AAEA,IAAIA,WAAW,GAAGC,OAAO,CAAC,eAAD,CAAzB;;AAEA,MAAMC,QAAN,SAAuBF,WAAvB,CAAmC;AACjCG,EAAAA,WAAW,CAACC,MAAD,EAASC,KAAT,EAAgBC,OAAhB,EAAyB;AAClC,UAAMF,MAAN,EAAcC,KAAd,EAAqBC,OAArB;AACD;;AAEDC,EAAAA,WAAW,CAACC,WAAD,EAAc;AACvB,QAAI,KAAKC,UAAT,EAAqB;AACrB,SAAKA,UAAL,GAAkB,EAAlB;AACA,QAAIC,QAAQ,GAAG,KAAKA,QAApB;AACA,QAAI,OAAOA,QAAP,KAAoB,WAAxB,EACE;;AACF,SAAK,IAAIC,CAAC,GAAG,CAAR,EAAWC,KAAhB,EAAuBA,KAAK,GAAGF,QAAQ,CAACC,CAAD,CAAvC,EAA4CA,CAAC,EAA7C,EAAiD;AAC/C,UAAIC,KAAK,CAACC,IAAN,KAAe,WAAnB,EACE;AACFD,MAAAA,KAAK,CAACL,WAAN,CAAkBC,WAAlB;AACA,WAAKC,UAAL,CAAgBG,KAAK,CAACE,KAAtB,IAA+BF,KAA/B;AACD;AACF;;AAEDG,EAAAA,QAAQ,CAACP,WAAD,EAAc;AACpB,QAAIC,UAAU,GAAG,EAAjB;;AACA,SAAK,IAAII,IAAT,IAAiB,KAAKJ,UAAtB,EAAkC;AAChC,UAAIO,MAAM,GAAG,KAAKP,UAAL,CAAgBI,IAAhB,CAAb;AACAJ,MAAAA,UAAU,CAACI,IAAD,CAAV,GAAmBG,MAAM,CAACD,QAAP,CAAgBP,WAAhB,CAAnB;AACD;;AACD,WAAOC,UAAP;AACD;;AA1BgC;;AA6BnCP,QAAQ,CAACe,WAAT,GAAuB,UAAvB;AACAf,QAAQ,CAACgB,eAAT,GAA2B,CAAC,WAAD,EAAc,eAAd,CAA3B;AAEAC,MAAM,CAACC,OAAP,GAAiBlB,QAAjB","sourcesContent":["// Copyright IBM Corp. 2016,2017. All Rights Reserved.\n// Node module: strong-soap\n// This file is licensed under the MIT License.\n// License text available at https://opensource.org/licenses/MIT\n\n'use strict';\n\nvar WSDLElement = require('./wsdlElement');\n\nclass PortType extends WSDLElement {\n  constructor(nsName, attrs, options) {\n    super(nsName, attrs, options);\n  }\n\n  postProcess(definitions) {\n    if (this.operations) return;\n    this.operations = {};\n    var children = this.children;\n    if (typeof children === 'undefined')\n      return;\n    for (var i = 0, child; child = children[i]; i++) {\n      if (child.name !== 'operation')\n        continue;\n      child.postProcess(definitions);\n      this.operations[child.$name] = child;\n    }\n  }\n\n  describe(definitions) {\n    var operations = {};\n    for (var name in this.operations) {\n      var method = this.operations[name];\n      operations[name] = method.describe(definitions);\n    }\n    return operations;\n  };\n}\n\nPortType.elementName = 'portType';\nPortType.allowedChildren = ['operation', 'documentation'];\n\nmodule.exports = PortType;\n"],"file":"portType.js"}