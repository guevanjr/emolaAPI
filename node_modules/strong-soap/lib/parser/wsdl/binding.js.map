{"version":3,"sources":["../../../src/parser/wsdl/binding.js"],"names":["WSDLElement","require","QName","Binding","constructor","nsName","attrs","options","transport","style","addChild","child","name","$transport","$style","postProcess","definitions","operations","type","parse","$type","portType","portTypes","children","i","operation","$name","input","message","output","f","faults","$parameterOrder","parameterOrder","split","err","describe","descriptor","elementName","allowedChildren","module","exports"],"mappings":"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","sourcesContent":["// Copyright IBM Corp. 2016,2018. All Rights Reserved.\n// Node module: strong-soap\n// This file is licensed under the MIT License.\n// License text available at https://opensource.org/licenses/MIT\n\n'use strict';\n\nvar WSDLElement = require('./wsdlElement');\nvar QName = require('../qname');\n\nclass Binding extends WSDLElement {\n  constructor(nsName, attrs, options) {\n    super(nsName, attrs, options);\n    this.transport = '';\n    this.style = '';\n  }\n\n  addChild(child) {\n    // soap:binding\n    if (child.name === 'binding') {\n      this.transport = child.$transport;\n      this.style = child.$style;\n    }\n  }\n\n  postProcess(definitions) {\n    if (this.operations) return;\n    try {\n      this.operations = {};\n      var type = QName.parse(this.$type).name,\n        portType = definitions.portTypes[type],\n        style = this.style,\n        children = this.children;\n      if (portType) {\n        portType.postProcess(definitions);\n        this.portType = portType;\n\n        for (var i = 0, child; child = children[i]; i++) {\n          if (child.name !== 'operation')\n            continue;\n          var operation = this.portType.operations[child.$name];\n          if (operation) {\n            this.operations[child.$name] = child;\n            child.operation = operation;\n\n            // Set portType.operation.input.message to binding.operation.input\n            if (operation.input && child.input) {\n              child.input.message = operation.input.message;\n            }\n            // Set portType.operation.output.message to binding.operation.output\n            if (operation.output && child.output) {\n              child.output.message = operation.output.message;\n            }\n\n            //portType.operation.fault is fully processed with message etc. Hence set to binding.operation.fault\n            for (var f in operation.faults) {\n              if (operation.faults[f]) {\n                child.faults[f] = operation.faults[f];\n              }\n            }\n            if (operation.$parameterOrder) {\n              // For RPC style\n              child.parameterOrder = operation.$parameterOrder.split(/\\s+/);\n            }\n            child.style = child.style || style;\n            child.postProcess(definitions);\n          }\n        }\n      }\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  describe(definitions) {\n    if (this.descriptor) return this.descriptor;\n    var operations = this.descriptor = {};\n    for (var name in this.operations) {\n      var operation = this.operations[name];\n      operations[name] = operation.describe(definitions);\n    }\n    return operations;\n  };\n}\n\nBinding.elementName = 'binding';\nBinding.allowedChildren = ['binding', 'SecuritySpec', 'operation',\n  'documentation'];\n\nmodule.exports = Binding;\n"],"file":"binding.js"}