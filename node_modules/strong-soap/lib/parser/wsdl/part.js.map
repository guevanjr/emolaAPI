{"version":3,"sources":["../../../src/parser/wsdl/part.js"],"names":["WSDLElement","require","Part","constructor","nsName","attrs","options","postProcess","definitions","$element","element","resolveSchemaObject","schemas","$type","type","describe","descriptor","elementName","module","exports"],"mappings":"AAAA;AACA;AACA;AACA;AAEA;;AAEA,IAAIA,WAAW,GAAGC,OAAO,CAAC,eAAD,CAAzB;;AAEA,MAAMC,IAAN,SAAmBF,WAAnB,CAA+B;AAC7BG,EAAAA,WAAW,CAACC,MAAD,EAASC,KAAT,EAAgBC,OAAhB,EAAyB;AAClC,UAAMF,MAAN,EAAcC,KAAd,EAAqBC,OAArB;AACD;;AAEDC,EAAAA,WAAW,CAACC,WAAD,EAAc;AACvB,QAAI,KAAKC,QAAT,EAAmB;AACjB,WAAKC,OAAL,GAAe,KAAKC,mBAAL,CACbH,WAAW,CAACI,OADC,EACQ,SADR,EACmB,KAAKH,QADxB,CAAf;AAED,KAHD,MAGO,IAAI,KAAKI,KAAT,EAAgB;AACrB,WAAKC,IAAL,GAAY,KAAKH,mBAAL,CACVH,WAAW,CAACI,OADF,EACW,MADX,EACmB,KAAKC,KADxB,CAAZ;AAED;AACF;;AAEDE,EAAAA,QAAQ,CAACP,WAAD,EAAc;AACpB,QAAI,KAAKQ,UAAT,EAAqB,OAAO,KAAKA,UAAZ;;AACrB,QAAI,KAAKN,OAAT,EAAkB;AAChB,WAAKM,UAAL,GAAkB,KAAKN,OAAL,CAAaK,QAAb,CAAsBP,WAAtB,CAAlB;AACD,KAFD,MAEO,IAAI,KAAKM,IAAT,EAAe;AACpB,WAAKE,UAAL,GAAkB,KAAKF,IAAL,CAAUC,QAAV,CAAmBP,WAAnB,CAAlB;AACD,KAFM,MAEA;AACL,WAAKQ,UAAL,GAAkB,IAAlB;AACD;;AACD,WAAO,KAAKA,UAAZ;AACD;;AAzB4B;;AA4B/Bd,IAAI,CAACe,WAAL,GAAmB,MAAnB;AAEAC,MAAM,CAACC,OAAP,GAAiBjB,IAAjB","sourcesContent":["// Copyright IBM Corp. 2016,2017. All Rights Reserved.\n// Node module: strong-soap\n// This file is licensed under the MIT License.\n// License text available at https://opensource.org/licenses/MIT\n\n'use strict';\n\nvar WSDLElement = require('./wsdlElement');\n\nclass Part extends WSDLElement {\n  constructor(nsName, attrs, options) {\n    super(nsName, attrs, options);\n  }\n  \n  postProcess(definitions) {\n    if (this.$element) {\n      this.element = this.resolveSchemaObject(\n        definitions.schemas, 'element', this.$element);\n    } else if (this.$type) {\n      this.type = this.resolveSchemaObject(\n        definitions.schemas, 'type', this.$type);\n    }\n  }\n\n  describe(definitions) {\n    if (this.descriptor) return this.descriptor;\n    if (this.element) {\n      this.descriptor = this.element.describe(definitions);\n    } else if (this.type) {\n      this.descriptor = this.type.describe(definitions);\n    } else {\n      this.descriptor = null;\n    }\n    return this.descriptor;\n  }\n}\n\nPart.elementName = 'part';\n\nmodule.exports = Part;\n"],"file":"part.js"}