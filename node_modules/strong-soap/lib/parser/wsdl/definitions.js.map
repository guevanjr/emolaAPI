{"version":3,"sources":["../../../src/parser/wsdl/definitions.js"],"names":["_","require","WSDLElement","Schema","Types","Message","PortType","Binding","Service","Documentation","Definitions","constructor","nsName","attrs","options","messages","portTypes","bindings","services","schemas","addChild","child","self","merge","$name","name","$namespace","targetNamespace","transport","elementName","allowedChildren","module","exports"],"mappings":"AAAA;AACA;AACA;AACA;AAEA;;AAEA,IAAIA,CAAC,GAAGC,OAAO,CAAC,QAAD,CAAf;;AACA,IAAIC,WAAW,GAAGD,OAAO,CAAC,eAAD,CAAzB;;AACA,IAAIE,MAAM,GAAGF,OAAO,CAAC,eAAD,CAApB;;AACA,IAAIG,KAAK,GAAGH,OAAO,CAAC,SAAD,CAAnB;;AACA,IAAII,OAAO,GAAGJ,OAAO,CAAC,WAAD,CAArB;;AACA,IAAIK,QAAQ,GAAGL,OAAO,CAAC,YAAD,CAAtB;;AACA,IAAIM,OAAO,GAAGN,OAAO,CAAC,WAAD,CAArB;;AACA,IAAIO,OAAO,GAAGP,OAAO,CAAC,WAAD,CAArB;;AACA,IAAIQ,aAAa,GAAGR,OAAO,CAAC,iBAAD,CAA3B;;AAEA,MAAMS,WAAN,SAA0BR,WAA1B,CAAsC;AACpCS,EAAAA,WAAW,CAACC,MAAD,EAASC,KAAT,EAAgBC,OAAhB,EAAyB;AAClC,UAAMF,MAAN,EAAcC,KAAd,EAAqBC,OAArB;AACA,SAAKC,QAAL,GAAgB,EAAhB;AACA,SAAKC,SAAL,GAAiB,EAAjB;AACA,SAAKC,QAAL,GAAgB,EAAhB;AACA,SAAKC,QAAL,GAAgB,EAAhB;AACA,SAAKC,OAAL,GAAe,EAAf;AACD;;AAEDC,EAAAA,QAAQ,CAACC,KAAD,EAAQ;AACd,QAAIC,IAAI,GAAG,IAAX;;AACA,QAAID,KAAK,YAAYjB,KAArB,EAA4B;AAC1B;AACAJ,MAAAA,CAAC,CAACuB,KAAF,CAAQD,IAAI,CAACH,OAAb,EAAsBE,KAAK,CAACF,OAA5B;AACD,KAHD,MAIK,IAAIE,KAAK,YAAYhB,OAArB,EAA8B;AACjCiB,MAAAA,IAAI,CAACP,QAAL,CAAcM,KAAK,CAACG,KAApB,IAA6BH,KAA7B;AACD,KAFI,MAGA,IAAIA,KAAK,CAACI,IAAN,KAAe,QAAnB,EAA6B;AAChC;AACAH,MAAAA,IAAI,CAACH,OAAL,CAAaE,KAAK,CAACK,UAAnB,IAAiC,IAAIvB,MAAJ,CAAW,WAAX,EAAuB;AAACwB,QAAAA,eAAe,EAAEN,KAAK,CAACK;AAAxB,OAAvB,CAAjC;AACAJ,MAAAA,IAAI,CAACH,OAAL,CAAaE,KAAK,CAACK,UAAnB,EAA+BN,QAA/B,CAAwCC,KAAxC;AACD,KAJI,MAKA,IAAIA,KAAK,YAAYf,QAArB,EAA+B;AAClCgB,MAAAA,IAAI,CAACN,SAAL,CAAeK,KAAK,CAACG,KAArB,IAA8BH,KAA9B;AACD,KAFI,MAGA,IAAIA,KAAK,YAAYd,OAArB,EAA8B;AACjC,UAAIc,KAAK,CAACO,SAAN,KAAoB,sCAApB,IACFP,KAAK,CAACO,SAAN,KAAoB,+CADtB,EAEEN,IAAI,CAACL,QAAL,CAAcI,KAAK,CAACG,KAApB,IAA6BH,KAA7B;AACH,KAJI,MAKA,IAAIA,KAAK,YAAYb,OAArB,EAA8B;AACjCc,MAAAA,IAAI,CAACJ,QAAL,CAAcG,KAAK,CAACG,KAApB,IAA6BH,KAA7B;AACD,KAFI,MAGA,IAAIA,KAAK,YAAYZ,aAArB,EAAoC,CACxC;AACF;;AArCmC;;AAwCtCC,WAAW,CAACmB,WAAZ,GAA0B,aAA1B;AACAnB,WAAW,CAACoB,eAAZ,GAA8B,CAAC,OAAD,EAAU,SAAV,EAAqB,UAArB,EAAiC,SAAjC,EAC5B,SAD4B,EACjB,QADiB,EACP,eADO,EACU,QADV,EACoB,KADpB,CAA9B;AAGAC,MAAM,CAACC,OAAP,GAAiBtB,WAAjB","sourcesContent":["// Copyright IBM Corp. 2016,2017. All Rights Reserved.\n// Node module: strong-soap\n// This file is licensed under the MIT License.\n// License text available at https://opensource.org/licenses/MIT\n\n'use strict';\n\nvar _ = require('lodash');\nvar WSDLElement = require('./wsdlElement');\nvar Schema = require('../xsd/schema');\nvar Types = require('./types');\nvar Message = require('./message');\nvar PortType = require('./portType');\nvar Binding = require('./binding');\nvar Service = require('./service');\nvar Documentation = require('./documentation');\n\nclass Definitions extends WSDLElement {\n  constructor(nsName, attrs, options) {\n    super(nsName, attrs, options);\n    this.messages = {};\n    this.portTypes = {};\n    this.bindings = {};\n    this.services = {};\n    this.schemas = {};\n  }\n\n  addChild(child) {\n    var self = this;\n    if (child instanceof Types) {\n      // Merge types.schemas into definitions.schemas\n      _.merge(self.schemas, child.schemas);\n    }\n    else if (child instanceof Message) {\n      self.messages[child.$name] = child;\n    }\n    else if (child.name === 'import') {\n      //create a Schema element for the <import ../>. targetNamespace is the 'namespace' of the <import  />  element in the wsdl.\n      self.schemas[child.$namespace] = new Schema('xs:schema',{targetNamespace: child.$namespace});\n      self.schemas[child.$namespace].addChild(child);\n    }\n    else if (child instanceof PortType) {\n      self.portTypes[child.$name] = child;\n    }\n    else if (child instanceof Binding) {\n      if (child.transport === 'http://schemas.xmlsoap.org/soap/http' ||\n        child.transport === 'http://www.w3.org/2003/05/soap/bindings/HTTP/')\n        self.bindings[child.$name] = child;\n    }\n    else if (child instanceof Service) {\n      self.services[child.$name] = child;\n    }\n    else if (child instanceof Documentation) {\n    }\n  }\n}\n\nDefinitions.elementName = 'definitions';\nDefinitions.allowedChildren = ['types', 'message', 'portType', 'binding',\n  'service', 'import', 'documentation', 'import', 'any'];\n\nmodule.exports = Definitions;\n"],"file":"definitions.js"}